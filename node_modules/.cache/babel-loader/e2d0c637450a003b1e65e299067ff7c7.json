{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFixture = getFixture;\n\nvar _react = require(\"../react\");\n\nfunction getFixture(fixtureExport, fixtureName) {\n  if (fixtureName === null) {\n    if ((0, _react.isMultiFixture)(fixtureExport)) {\n      // Fixture name missing in multi fixture\n      return;\n    }\n\n    return fixtureExport;\n  }\n\n  if (!(0, _react.isMultiFixture)(fixtureExport)) {\n    // Fixture name not found in single fixture\n    return;\n  } // FIXME: Why does fixtureExport need to be cast as ReactFixtureMap when\n  // the type predicate returned by isMultiFixture already ensures it?\n\n\n  var multiFixtureExport = fixtureExport;\n  return multiFixtureExport[fixtureName];\n}","map":{"version":3,"sources":["/home/cubex/www/koruts/TASKS/node_modules/react-cosmos-shared2/dist/FixtureLoader/fixtureHelpers.js"],"names":["Object","defineProperty","exports","value","getFixture","_react","require","fixtureExport","fixtureName","isMultiFixture","multiFixtureExport"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,UAAR,GAAqBA,UAArB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEA,SAASF,UAAT,CAAoBG,aAApB,EAAmCC,WAAnC,EAAgD;AAC9C,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB,QAAI,CAAC,GAAGH,MAAM,CAACI,cAAX,EAA2BF,aAA3B,CAAJ,EAA+C;AAC7C;AACA;AACD;;AAED,WAAOA,aAAP;AACD;;AAED,MAAI,CAAC,CAAC,GAAGF,MAAM,CAACI,cAAX,EAA2BF,aAA3B,CAAL,EAAgD;AAC9C;AACA;AACD,GAb6C,CAa5C;AACF;;;AAGA,MAAIG,kBAAkB,GAAGH,aAAzB;AACA,SAAOG,kBAAkB,CAACF,WAAD,CAAzB;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFixture = getFixture;\n\nvar _react = require(\"../react\");\n\nfunction getFixture(fixtureExport, fixtureName) {\n  if (fixtureName === null) {\n    if ((0, _react.isMultiFixture)(fixtureExport)) {\n      // Fixture name missing in multi fixture\n      return;\n    }\n\n    return fixtureExport;\n  }\n\n  if (!(0, _react.isMultiFixture)(fixtureExport)) {\n    // Fixture name not found in single fixture\n    return;\n  } // FIXME: Why does fixtureExport need to be cast as ReactFixtureMap when\n  // the type predicate returned by isMultiFixture already ensures it?\n\n\n  var multiFixtureExport = fixtureExport;\n  return multiFixtureExport[fixtureName];\n}"]},"metadata":{},"sourceType":"script"}