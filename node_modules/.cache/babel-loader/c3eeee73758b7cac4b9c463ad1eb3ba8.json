{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerShortcuts = registerShortcuts;\n\nfunction registerShortcuts(runCommand) {\n  window.addEventListener('keydown', handleWindowKeyDown);\n\n  function run(e, command) {\n    e.preventDefault();\n    runCommand(command);\n  }\n\n  function handleWindowKeyDown(e) {\n    if (isEditing()) {\n      return;\n    }\n\n    var keyChar = String.fromCharCode(e.keyCode);\n    var metaKey = e.metaKey || e.ctrlKey;\n\n    if (keyChar === 'P' && metaKey) {\n      run(e, 'searchFixtures');\n    } else if (keyChar === 'L' && metaKey && e.shiftKey) {\n      run(e, 'toggleFixtureList');\n    } else if (keyChar === 'K' && metaKey && e.shiftKey) {\n      run(e, 'toggleControlPanel');\n    } else if (keyChar === 'F' && metaKey && e.shiftKey) {\n      run(e, 'goFullScreen');\n    } else if (keyChar === 'E' && metaKey && e.shiftKey) {\n      run(e, 'editFixture');\n    }\n  }\n\n  return function () {\n    window.removeEventListener('keydown', handleWindowKeyDown);\n  };\n}\n\nfunction isEditing() {\n  var activeElement = document.activeElement;\n  return activeElement && isInputTag(activeElement.tagName);\n}\n\nfunction isInputTag(tagName) {\n  var inputTags = ['input', 'textarea', 'select'];\n  return inputTags.includes(tagName.toLowerCase());\n}","map":{"version":3,"sources":["/home/cubex/www/koruts/TASKS/node_modules/react-cosmos-shared2/dist/playground.js"],"names":["Object","defineProperty","exports","value","registerShortcuts","runCommand","window","addEventListener","handleWindowKeyDown","run","e","command","preventDefault","isEditing","keyChar","String","fromCharCode","keyCode","metaKey","ctrlKey","shiftKey","removeEventListener","activeElement","document","isInputTag","tagName","inputTags","includes","toLowerCase"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;;AAEA,SAASA,iBAAT,CAA2BC,UAA3B,EAAuC;AACrCC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCC,mBAAnC;;AAEA,WAASC,GAAT,CAAaC,CAAb,EAAgBC,OAAhB,EAAyB;AACvBD,IAAAA,CAAC,CAACE,cAAF;AACAP,IAAAA,UAAU,CAACM,OAAD,CAAV;AACD;;AAED,WAASH,mBAAT,CAA6BE,CAA7B,EAAgC;AAC9B,QAAIG,SAAS,EAAb,EAAiB;AACf;AACD;;AAED,QAAIC,OAAO,GAAGC,MAAM,CAACC,YAAP,CAAoBN,CAAC,CAACO,OAAtB,CAAd;AACA,QAAIC,OAAO,GAAGR,CAAC,CAACQ,OAAF,IAAaR,CAAC,CAACS,OAA7B;;AAEA,QAAIL,OAAO,KAAK,GAAZ,IAAmBI,OAAvB,EAAgC;AAC9BT,MAAAA,GAAG,CAACC,CAAD,EAAI,gBAAJ,CAAH;AACD,KAFD,MAEO,IAAII,OAAO,KAAK,GAAZ,IAAmBI,OAAnB,IAA8BR,CAAC,CAACU,QAApC,EAA8C;AACnDX,MAAAA,GAAG,CAACC,CAAD,EAAI,mBAAJ,CAAH;AACD,KAFM,MAEA,IAAII,OAAO,KAAK,GAAZ,IAAmBI,OAAnB,IAA8BR,CAAC,CAACU,QAApC,EAA8C;AACnDX,MAAAA,GAAG,CAACC,CAAD,EAAI,oBAAJ,CAAH;AACD,KAFM,MAEA,IAAII,OAAO,KAAK,GAAZ,IAAmBI,OAAnB,IAA8BR,CAAC,CAACU,QAApC,EAA8C;AACnDX,MAAAA,GAAG,CAACC,CAAD,EAAI,cAAJ,CAAH;AACD,KAFM,MAEA,IAAII,OAAO,KAAK,GAAZ,IAAmBI,OAAnB,IAA8BR,CAAC,CAACU,QAApC,EAA8C;AACnDX,MAAAA,GAAG,CAACC,CAAD,EAAI,aAAJ,CAAH;AACD;AACF;;AAED,SAAO,YAAY;AACjBJ,IAAAA,MAAM,CAACe,mBAAP,CAA2B,SAA3B,EAAsCb,mBAAtC;AACD,GAFD;AAGD;;AAED,SAASK,SAAT,GAAqB;AACnB,MAAIS,aAAa,GAAGC,QAAQ,CAACD,aAA7B;AACA,SAAOA,aAAa,IAAIE,UAAU,CAACF,aAAa,CAACG,OAAf,CAAlC;AACD;;AAED,SAASD,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,MAAIC,SAAS,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,QAAtB,CAAhB;AACA,SAAOA,SAAS,CAACC,QAAV,CAAmBF,OAAO,CAACG,WAAR,EAAnB,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerShortcuts = registerShortcuts;\n\nfunction registerShortcuts(runCommand) {\n  window.addEventListener('keydown', handleWindowKeyDown);\n\n  function run(e, command) {\n    e.preventDefault();\n    runCommand(command);\n  }\n\n  function handleWindowKeyDown(e) {\n    if (isEditing()) {\n      return;\n    }\n\n    var keyChar = String.fromCharCode(e.keyCode);\n    var metaKey = e.metaKey || e.ctrlKey;\n\n    if (keyChar === 'P' && metaKey) {\n      run(e, 'searchFixtures');\n    } else if (keyChar === 'L' && metaKey && e.shiftKey) {\n      run(e, 'toggleFixtureList');\n    } else if (keyChar === 'K' && metaKey && e.shiftKey) {\n      run(e, 'toggleControlPanel');\n    } else if (keyChar === 'F' && metaKey && e.shiftKey) {\n      run(e, 'goFullScreen');\n    } else if (keyChar === 'E' && metaKey && e.shiftKey) {\n      run(e, 'editFixture');\n    }\n  }\n\n  return function () {\n    window.removeEventListener('keydown', handleWindowKeyDown);\n  };\n}\n\nfunction isEditing() {\n  var activeElement = document.activeElement;\n  return activeElement && isInputTag(activeElement.tagName);\n}\n\nfunction isInputTag(tagName) {\n  var inputTags = ['input', 'textarea', 'select'];\n  return inputTags.includes(tagName.toLowerCase());\n}"]},"metadata":{},"sourceType":"script"}